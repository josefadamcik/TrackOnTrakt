import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply from: 'jacoco.gradle'
apply plugin: "com.jaredsburrows.spoon"
apply plugin: "com.jaredsburrows.license"
apply plugin: 'com.github.triplet.play'

static def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'") // you can change it
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

// Manifest version information!
def versionMajor = 0
def versionMinor = 2
def versionPatch = 2
def versionBuild = 0 // bump for dogfood builds, public betas, etc.


def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitTimestamp = 'git log -n 1 --format=%at'.execute([], rootDir).text.trim()
def packagename = "cz.josefadamcik.trackontrakt"


Properties properties = new Properties()
properties.load(project.rootProject.file('keys.properties').newDataInputStream())
def traktclientid = properties.getProperty('trakt.clientid')
def traktclientsecret = properties.getProperty('trakt.clientsecret')
def uploadKey = properties.getProperty('playstore.upload_key')
def uploadStorePassword = properties.getProperty('playstore.upload_store_password')
def uploadKeyPassword = properties.getProperty('playstore.upload_key_password')


android {
    compileSdkVersion rootProject.ext.compileSdkVersion


    signingConfigs {
        release {
            storeFile file("../keystore.jks")
            storePassword uploadStorePassword
            keyAlias uploadKey
            keyPassword uploadKeyPassword
        }
    }

    playAccountConfigs {
        defaultAccountConfig {
            serviceAccountEmail = 'play-publishing-account@api-4802910556474683265-893141.iam.gserviceaccount.com'
            pk12File = file('../play_services_account.p12')
        }
    }

    defaultConfig {
        applicationId "${packagename}"
        testApplicationId "${packagename}.test"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        playAccountConfig = playAccountConfigs.defaultAccountConfig

//        vectorDrawables.useSupportLibrary = true

        buildConfigField 'String', 'GIT_SHA', "\"${gitSha}\""
        buildConfigField 'long', 'GIT_TIMESTAMP', "${gitTimestamp}"
        buildConfigField 'String', 'BUILD_DATE', "\"${buildTime()}\""

        buildConfigField "int", "MOCKSERVER_PORT", "8698"

        buildConfigField "String", "TRAKT_CLIENT_ID", "\"${traktclientid}\""
        buildConfigField "String", "TRAKT_CLIENT_SECRET", "\"${traktclientsecret}\""
        buildConfigField "String", "TRAKT_OAUTH_REDIRECT_URL", "\"tot://authorized\""
        buildConfigField "String", "TRAKT_BASE_API_URL", "\"https://api.trakt.tv\""
        buildConfigField "String", "TRAKT_LOGIN_URL", "\"https://trakt.tv/oauth/authorize?response_type=code&client_id=%s&redirect_uri=%s\""

        multiDexEnabled true
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
            debuggable true
            //signingConfig signingConfigs.debug
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard-rules.pro')
            signingConfig signingConfigs.release
        }
    }


    lintOptions {
        abortOnError false
        //textReport true
        //textOutput 'stdout'
//        warning 'InvalidPackage'
//        warning 'ResourceType' //TODO remove eventually with ButterKnife 8.0 release
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    testOptions {
//        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }
}

configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:$rootProject.ext.supportLibraryVersion"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
//    implementation 'com.android.support:multidex:1.0.2'

    /* Testing */
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    testImplementation 'org.mockito:mockito-core:2.8.9'
    testImplementation "org.mockito:mockito-inline:2.8.9"
    testImplementation 'com.nhaarman:mockito-kotlin-kt1.1:1.5.0'

    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.2.0' //includes mockito
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
    //androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestImplementation('com.schibsted.spain:barista:2.2.0') {
        exclude group: 'com.android.support'
        exclude group: 'org.jetbrains.kotlin' // Only if you already use Kotlin in your project
    }


    androidTestImplementation('com.squareup.okhttp3:mockwebserver:3.5.0') {
        exclude module: 'okhttp'
    }

    //WireMock
    androidTestImplementation("com.github.tomakehurst:wiremock:2.5.0") {
        //Using Android Version Instead
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'

        //Version conflict with our app's slf4j version
//        exclude group: 'org.slf4j', module: 'slf4j-api'

        //Was getting a classpath conflict for org.objectweb.asm.AnnotationVisitor which is a part of 'net.minidev:asm'
        exclude group: 'org.ow2.asm', module: 'asm'

        //Was getting this warning, so decided to ignore this version included by WireMock.
        //Warning:Dependency org.json:json:20090211 is ignored as it may be conflicting with the internal version provided by Android.
        //In case of problem, please repackage with jarjar to change the class package
        exclude group: 'org.json', module: 'json'
    }

    androidTestImplementation 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    androidTestImplementation 'commons-io:commons-io:2.5'
    //androidTestImplementation "com.squareup.spoon:spoon-client:1.5.6"
    androidTestImplementation "com.squareup.spoon:spoon-client:2.0.0-SNAPSHOT" // For Spoon snapshot, until 2.0.0 is released
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }

    /* Build dependencies */

    //support, design, etc
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:animated-vector-drawable:$rootProject.ext.supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta4'

//    internalImplementation 'com.squareup.leakcanary:leakcanary-android:1.3.1'
//    productionImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true;
    }


    //basic utils
    implementation 'com.jakewharton.timber:timber:4.5.1'
    implementation 'com.github.yongjhih.kxdate:kxdate-threetenbp-android:-SNAPSHOT'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.0.5'
    testImplementation 'org.threeten:threetenbp:1.3.3'
    implementation 'nz.bradcampbell:paperparcel:2.0.1'
    implementation 'nz.bradcampbell:paperparcel-kotlin:2.0.1' // Optional
    kapt 'nz.bradcampbell:paperparcel-compiler:2.0.1'
    implementation 'com.evernote:android-state:1.0.6'
    kapt 'com.evernote:android-state-processor:1.0.6'

    //dagger 2
    implementation 'com.google.dagger:dagger:2.11'
    kapt 'com.google.dagger:dagger-compiler:2.11'
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.11'
    kaptTest 'com.google.dagger:dagger-compiler:2.11'
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    //rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.0.0-RC3'

    //api, networking
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    implementation "com.squareup.retrofit2:retrofit:2.2.0"
    implementation 'com.squareup.moshi:moshi:1.4.0'
    implementation 'com.squareup.moshi:moshi-adapters:1.4.0'
    implementation "com.squareup.retrofit2:converter-moshi:2.2.0"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:1.5.0@aar'

    //ui & view
    // MVP + ViewState + LCE Views http://hannesdorfmann.com/mosby/
    implementation 'com.hannesdorfmann.mosby3:mvp-lce:3.0.0'
    implementation 'com.jakewharton:butterknife:8.8.1'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'

    implementation 'me.zhanghai.android.materialprogressbar:library:1.4.2'
    implementation 'com.github.josefadamcik:MaterialSearchBar:devel-SNAPSHOT'
    implementation('com.wdullaer:materialdatetimepicker:3.5.0') {
        exclude group: 'com.android.support'
    }
    implementation('com.afollestad.material-dialogs:core:0.9.6.0') {
        exclude group: 'com.android.support'
    }
    implementation('com.afollestad.material-dialogs:commons:0.9.6.0') {
        exclude group: 'com.android.support'
    }
    implementation('com.wdullaer:materialdatetimepicker:3.5.0') {
        exclude group: 'com.android.support'
    }


}
repositories {
    mavenCentral()
}

// change apk name
android.applicationVariants.all { variant ->
    for (output in variant.outputs) {
//        def outputFile = output.outputFile
//        if (outputFile != null && outputFile.name.endsWith('.apk')) {
//            def fileName = "trackontrakt-${output.name}.apk"
//            output.outputFile = new File(outputFile.parent, fileName)
//        }
    }
}

// print build finish time
gradle.buildFinished { buildResult ->
    def buildFinishDate = new Date()
    def formattedDate = buildFinishDate.format('yyyy-MM-dd HH:mm:ss')
    println "Build finished: ${formattedDate}"
}

// This section is optional
spoon {
    // for debug output
    debug = true
    codeCoverage = true
    shard = false
    adbTimeout = 10
    ignoreFailures = true
    singleInstrumentationCall = true
}


task copyTestClasses(type: Copy) {
    from "build/tmp/kotlin-classes/debug"
    into "build/intermediates/classes/debug"
}

apply plugin: 'kotlin-android-extensions'